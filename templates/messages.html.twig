{% extends "admin/bars.html.twig" %}
{% block contenpage %}
{#{% for m in messages %}#}


{#{% if m.idTopic.id is same as topic.id and app.user is same as m.idUser %}#}
{#<h1>{{ m.content }}</h1>#}
{#{% endif %}#}

{#    {% endfor %}#}


    <section class="msger">
        <header class="msger-header">
            <div class="msger-header-title">
                <i class="fas fa-comment-alt"></i> Notre consultant est offert par notre administration! merci de le(a) respecter
            </div>
            <div class="msger-header-options">
                <span><i class="fas fa-cog"></i></span>
            </div>
        </header>

        {% for m in messages %}

        <main class="msger-chat">
{#            {% if m.idTopic.id is same as topic.id and app.user is same as m.idUser %}#}
{#            {% if m.idTopic.id is same as topic.id and app.user is same as m.idUser %}#}
            {% if (not app.user is same as m.idUser) and (topic.id is same as m.idTopic.id)  %}

{#    and (app.user.id is same as topic.author.id) and (topic.id is same as m.idTopic.id) and (m.idUser.id is same as topic.author.id) %}#}
            <div class="msg left-msg">
                <div
                >
                    {#                        style="background-image: url(https://image.flaticon.com/icons/svg/145/145867.svg)"#}
                    <img class="msg-img" src=" {{ asset('uploads/images/'  ~ m.idUser.logo) }}" alt="Awesome Image">
                </div>

                <div class="msg-bubble">
                    <div class="msg-info">
                        <div class="msg-info-name">{{ m.idUser.nomComplet }}</div>
                        <div class="msg-info-time">{{ m.publicationDate | date('d/m/Y H:i:s') }}</div>
                    </div>

                    <div class="msg-text">
                        {{m.content}} ðŸ˜„
                    </div>
                </div>
            </div>
{% endif %}

            {% if (app.user is same as m.idUser) and (topic.id is same as m.idTopic.id) %}
            <div class="msg right-msg">
                <div
                        >
{#                        style="background-image: url(https://image.flaticon.com/icons/svg/145/145867.svg)"#}
                    <img class="msg-img" src=" {{ asset('uploads/images/'  ~ m.idUser.logo) }}" alt="Awesome Image">
                </div>

                <div class="msg-bubble">
                    <div class="msg-info">
                        <div class="msg-info-name">Vous</div>
                        <div class="msg-info-time">{{ m.publicationDate | date('d/m/Y H:i:s') }}</div>
                    </div>

                    <div class="msg-text">
                        {{m.content}}
                    </div>
                </div>
            </div>
                {% endif %}
        </main>
{% endfor %}
                    <div class="col-xl-12 message" id="new-message">
                        {% if app.user is null %}
                            <div class="bg-danger" id="no-new-message">
                                <p class="no-form">Vous devez Ãªtre connectÃ© pour Ã©crire un message</p>
                            </div>


                        {% elseif is_granted('ROLE_ADMIN')   %}
                            <br/><br/>
                            <h5 style="text-align: center" >DesolÃ© notre Admin vous ne pouvez pas particper a cette discussion :(</h5>
                        {% elseif not is_granted('ROLE_ADMIN') and topic.valid == false   %}
                            <br/><br/>
<h5 style="text-align: center">Cette conversation est desactivÃ©e par notre administration</h5>
                        {% else %}
                            <div id="new-message-form">
                                {{ form_start(form) }}
                                <label for="new_message_content" class="required">repondre pour le sujet: <strong>{{ topic.name }}</strong></label>
                                {{ form_errors(form) }}
                                {{ form_rest(form) }}
                                {{ form_end(form) }}
                            </div>

                        {% endif %}
                    </div>
    </section>



    <script>

        const msgerForm = get(".msger-inputarea");
        const msgerInput = get(".msger-input");
        const msgerChat = get(".msger-chat");

        const BOT_MSGS = [
            "Hi, how are you?",
            "Ohh... I can't understand what you trying to say. Sorry!",
            "I like to play games... But I don't know how to play!",
            "Sorry if my answers are not relevant. :))",
            "I feel sleepy! :("
        ];

        // Icons made by Freepik from www.flaticon.com
        const BOT_IMG = "https://image.flaticon.com/icons/svg/327/327779.svg";
        const PERSON_IMG = "https://image.flaticon.com/icons/svg/145/145867.svg";
        const BOT_NAME = "BOT";
        const PERSON_NAME = "Sajad";

        msgerForm.addEventListener("submit", event => {
            event.preventDefault();

            const msgText = msgerInput.value;
            if (!msgText) return;

            appendMessage(PERSON_NAME, PERSON_IMG, "right", msgText);
            msgerInput.value = "";

            botResponse();
        });

        function appendMessage(name, img, side, text) {
            //   Simple solution for small apps
            const msgHTML = `
        <div class="msg ${side}-msg">
          <div class="msg-img" style="background-image: url(${img})"></div>

          <div class="msg-bubble">
            <div class="msg-info">
              <div class="msg-info-name">${name}</div>
              <div class="msg-info-time">${formatDate(new Date())}</div>
            </div>

            <div class="msg-text">${text}</div>
          </div>
        </div>
      `;

            msgerChat.insertAdjacentHTML("beforeend", msgHTML);
            msgerChat.scrollTop += 500;
        }

        function botResponse() {
            const r = random(0, BOT_MSGS.length - 1);
            const msgText = BOT_MSGS[r];
            const delay = msgText.split(" ").length * 100;

            setTimeout(() => {
                appendMessage(BOT_NAME, BOT_IMG, "left", msgText);
            }, delay);
        }

        // Utils
        function get(selector, root = document) {
            return root.querySelector(selector);
        }

        function formatDate(date) {
            const h = "0" + date.getHours();
            const m = "0" + date.getMinutes();

            return `${h.slice(-2)}:${m.slice(-2)}`;
        }

        function random(min, max) {
            return Math.floor(Math.random() * (max - min) + min);
        }


    </script>
{% endblock %}